trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '755f0dd8-4930-469e-bc5b-e6f6d86cea34'
  imageRepository: 'rujhaanproductsstoreonkubernetes'
  containerRegistry: 'rbdtest.azurecr.io'
  dockerfilePath: 'MvcApp/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'rbdtest'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'

    - task: CopyFiles@2
      displayName: Copy Kubernetes manifests
      inputs:
        SourceFolder: 'kubernetes'
        Contents: |
          mssql-configmap.yaml
          mssql-deployment.yaml
          mssql-pv.azure.yaml
          mssql-secret.yaml
          mvc-deployment.azure.yaml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - script: |
        echo "Listing contents of $(Build.ArtifactStagingDirectory):"
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: List contents of artifact staging directory for debugging
      
    - script: |
        sed -i 's|__DOCKER_REPOSITORY__|$(containerRegistry)|' $(Build.ArtifactStagingDirectory)/mvc-deployment.azure.yaml
        sed -i 's|__IMAGE_NAME__|$(imageRepository)|' $(Build.ArtifactStagingDirectory)/mvc-deployment.azure.yaml
        sed -i 's|__IMAGE_TAG__|$(tag)|' $(Build.ArtifactStagingDirectory)/mvc-deployment.azure.yaml
      displayName: Update image references in Kubernetes manifests
    
    - task: PublishBuildArtifacts@1
      displayName: Publish build artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Build.ArtifactStagingDirectory)'
      
    - script: |
        echo "Listing contents of $(Build.ArtifactStagingDirectory) after downloading artifacts:"
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: List contents of artifact staging directory after download for debugging

    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Free Trial (41ee97a2-4cba-49cf-8f61-ec4fb9d572aa)'
        azureResourceGroup: 'Integration1'
        kubernetesCluster: 'rbk8'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.ArtifactStagingDirectory)/mssql-configmap.yaml'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Free Trial (41ee97a2-4cba-49cf-8f61-ec4fb9d572aa)'
        azureResourceGroup: 'Integration1'
        kubernetesCluster: 'rbk8'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.ArtifactStagingDirectory)/mssql-pv.azure.yaml'


    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Free Trial (41ee97a2-4cba-49cf-8f61-ec4fb9d572aa)'
        azureResourceGroup: 'Integration1'
        kubernetesCluster: 'rbk8'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.ArtifactStagingDirectory)/mssql-secret.yaml'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Free Trial (41ee97a2-4cba-49cf-8f61-ec4fb9d572aa)'
        azureResourceGroup: 'Integration1'
        kubernetesCluster: 'rbk8'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.ArtifactStagingDirectory)/mvc-deployment.azure.yaml'

